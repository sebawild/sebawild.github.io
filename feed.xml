<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sebastian Wild's Site</title>
    <description>Website of Sebastian Wild, algorithms reseacher
</description>
    <link>https://wild-inter.net/</link>
    <atom:link href="https://wild-inter.net/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 24 Nov 2017 22:04:47 -0500</pubDate>
    <lastBuildDate>Fri, 24 Nov 2017 22:04:47 -0500</lastBuildDate>
    <generator>Jekyll v3.5.1</generator>
    
      <item>
        <title>Quick animations from slides for youtube</title>
        <description>&lt;p&gt;Quick animations from slides for youtube.&lt;/p&gt;

&lt;p&gt;Some things are better shown in motion. Full stop.
In a paper, you can only present still images, but linking
a youtube video with a supplemental animation is certainly
an acceptable option nowadays.&lt;/p&gt;

&lt;p&gt;So I created a quick and dirty animation from slides I had prepared 
already a while ago. 
The result is puristic (no audio comment, no fine tuning),
but I managed to get it in less than 40 min effort, 
including some trial and error and uploads.&lt;/p&gt;

&lt;p&gt;So here’s the three simple steps to create a quick-and-dirty animation from
you existing (pdf) slides.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pdftk slides.pdf burst
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To split into pages.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;for x in pg*pdf
do
    convert -density 400 $x &quot;$x{%pdf}png&quot;
done
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Create raster images using imagemagick; density adjusts the resolution.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mencoder mf://*.png -mf fps=1:type=png -ovc copy -oac copy -o output.avi
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Create video with one slide per second; adjust fps if not appropriate&lt;/p&gt;

&lt;p&gt;Check out my 
&lt;a href=&quot;https://www.youtube.com/watch?v=yi6syj9nksk&quot;&gt;result on youtube&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 05 Apr 2017 00:00:00 -0400</pubDate>
        <link>https://wild-inter.net/posts/youtube-slide-animation</link>
        <guid isPermaLink="true">https://wild-inter.net/posts/youtube-slide-animation</guid>
        
        
        <category>web</category>
        
      </item>
    
      <item>
        <title>Git for Computer Scientists</title>
        <description>&lt;p&gt;A memorizable description of git commands.&lt;/p&gt;

&lt;p&gt;If you ever worked with a version-control system, 
you will probably get nervous about any file not under the shelter
of the perpetual possibility to undo changes.
I have been using &lt;em&gt;git&lt;/em&gt; for quite some time now,
mostly for my solitary work (dissertation, papers, some code).
Since it is decentralized, it is easy to backup, 
and I am quite happy with it.&lt;/p&gt;

&lt;p&gt;One feature of git, however, I carefully avoided is &lt;em&gt;branching.&lt;/em&gt;
Of course, I tried it once when I read the git manual,
and I can work with existing branches, but I always felt a bit 
insecure of what the commands I typed were really doing.&lt;/p&gt;

&lt;p&gt;I have some hope that this will change now.
There is a nice post titled
&lt;a href=&quot;http://eagain.net/articles/git-for-computer-scientists/&quot;&gt;&lt;em&gt;Git for computer scientists&lt;/em&gt;&lt;/a&gt;
that explains concisely and
(for me) memorizably how git branches work:
namely, in terms of the underlying data structures.
I can only recommend investing 15 calm minutes in reading the article.&lt;/p&gt;

&lt;p&gt;Unfortunately, the article stops short when it comes to the 
meaning of git’s various commands.
I’m missing a concise specification in terms of git’s data structures,
so I’ll start my own here.
(I do not attempt to make it comprehensive, but rather memorizably concise).&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git branch &amp;lt;name&amp;gt;&lt;/code&gt;&lt;br /&gt;
Create a new named &lt;code class=&quot;highlighter-rouge&quot;&gt;ref&lt;/code&gt; pointing at the commit currently checked out in working area.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A thorough understanding of (an abstract view of) the inner workings
makes me feel comfortable to make more use of one of git’s 
most celebrated features.&lt;/p&gt;

</description>
        <pubDate>Mon, 27 Jun 2016 00:00:00 -0400</pubDate>
        <link>https://wild-inter.net/posts/git-for-computer-scientists</link>
        <guid isPermaLink="true">https://wild-inter.net/posts/git-for-computer-scientists</guid>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Pseudocode in Jekyll</title>
        <description>&lt;p&gt;There is a Jekyll plugin to typeset pseudocode.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/wkm/jekyll-pseudo&quot;&gt;jekyll-pseudo&lt;/a&gt;.
It looks quite simple; unless I find a better alternative, I’ll try this
out next time and update this post afterwards.&lt;/p&gt;

</description>
        <pubDate>Fri, 20 May 2016 00:00:00 -0400</pubDate>
        <link>https://wild-inter.net/posts/pseudocode-in-jekyll</link>
        <guid isPermaLink="true">https://wild-inter.net/posts/pseudocode-in-jekyll</guid>
        
        
        <category>web</category>
        
      </item>
    
      <item>
        <title>MathJax in Jekyll</title>
        <description>&lt;p&gt;I describe how I include MathJax using Euler fonts.&lt;/p&gt;

&lt;script type=&quot;text/x-mathjax-config&quot;&gt;
	var font = &quot;Neo-Euler&quot;;
	MathJax.Hub.Config({
		tex2jax: {
			inlineMath: [['$','$']],
			displayMath: [['\\[','\\]']],
			processEscapes: true,
		},
		&quot;SVG&quot;:{ 
			font:font
		},
		&quot;HTML-CSS&quot;: {
			webFont: font,
			imageFont: font,
			preferredFont: font,
			availableFonts: [],
			scale: 85,
			mtextFontInherit: true
		}
	});
&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;non-standard-fonts&quot;&gt;Non-Standard Fonts&lt;/h1&gt;

&lt;p&gt;I follow the instructions in &lt;a href=&quot;http://gastonsanchez.com/opinion/2014/02/16/Mathjax-with-jekyll/&quot;&gt;this blog&lt;/a&gt;
on getting MathJax support in Markdown using Jekyll.
However, to better match the Palatino text font,
I use the &lt;em&gt;Euler Math&lt;/em&gt; font, which MathJax can be configured to use.
A nice place to try out the different available fonts is
&lt;a href=&quot;http://checkmyworking.com/misc/MathJax-play-area/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I decided to include the mathjax scripts only on those pages,
where it is actually used, so I created a new &lt;code class=&quot;highlighter-rouge&quot;&gt;_include&lt;/code&gt; file
&lt;code class=&quot;highlighter-rouge&quot;&gt;mathjax.html&lt;/code&gt; with the usual MathJax contents:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;script type=&quot;text/x-mathjax-config&quot;&amp;gt;
var font = &quot;Neo-Euler&quot;;
MathJax.Hub.Config({
	tex2jax: {
		inlineMath: [['$','$']],
		displayMath: [['\\[','\\]']],
		processEscapes: true,
	},
	&quot;SVG&quot;:{ 
		font:font
	},
	&quot;HTML-CSS&quot;: {
		webFont: font,
		imageFont: font,
		preferredFont: font,
		availableFonts: [],
		scale: 85,
		mtextFontInherit: true
	}
}); &amp;lt;/script&amp;gt; &amp;lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;By starting a new page with  &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;mathjax.html&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;, 
MathJax support is enabled—and it works out of the box: &lt;script type=&quot;math/tex&quot;&gt;\sqrt x&lt;/script&gt;.&lt;/p&gt;

&lt;div class=&quot;digression&quot;&gt;
&lt;div class=&quot;digression-title&quot;&gt;Showing liquid tags.&lt;/div&gt;
To show liquid tags literally (i.e. not expanded by jekyll),
you can use the raw-tag of liquid.
&lt;/div&gt;

&lt;p&gt;By default, double dollars are used to delimit math, 
but it can also be configured 
to work with single dollars $\sum_{i=1}^n i^2 = \frac{n(n+1)(2n+1)}{6}$.&lt;/p&gt;

&lt;h1 id=&quot;using-macros&quot;&gt;Using macros&lt;/h1&gt;

&lt;p&gt;Using macros with MathJax is possible, but the support is limited;
&lt;code class=&quot;highlighter-rouge&quot;&gt;\newcommand&lt;/code&gt; with optional parameters does not seem to work.
In Jekyll, one runs into trouble with opening braces followed by % parts 
since these are interpreted as
liquid tag opening.&lt;/p&gt;

&lt;p&gt;However, basic macros do work. One can define a macro in one part
and use it later on that page.
It is best practice to put definitions in a separate &lt;code class=&quot;highlighter-rouge&quot;&gt;display:none&lt;/code&gt;
div to not influence the layout.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;div style=&quot;display:none&quot;&amp;gt;
$
\newcommand\testmacro[2]{\mathbf{F\alpha}(#1)^{#2}}
$
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div style=&quot;display:none&quot;&gt;
$
\newcommand\testmacro[2]{\mathbf{F\alpha}(#1)^{#2}}
$
&lt;/div&gt;

&lt;p&gt;Then we can use &lt;code class=&quot;highlighter-rouge&quot;&gt;$\testmacro{17}{\text{hallo}}$&lt;/code&gt; to get
$\testmacro{17}{\text{hallo}}$.&lt;/p&gt;

&lt;h1 id=&quot;font-trouble&quot;&gt;Font Trouble&lt;/h1&gt;

&lt;p&gt;Not all fonts work as they should with Euler math;
switching to &lt;code class=&quot;highlighter-rouge&quot;&gt;\mathrm&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;\mathit&lt;/code&gt; does not work:
$\mathrm{mathrm}$ and $\mathit{mathit}$ both use the ordinary Euler
font intended for single-letter variables—this is ugly.&lt;/p&gt;

&lt;p&gt;With the &lt;code class=&quot;highlighter-rouge&quot;&gt;mtextFontInherit&lt;/code&gt; inherit option, we can at least use
&lt;code class=&quot;highlighter-rouge&quot;&gt;\text&lt;/code&gt; to get multi-letter variables in roman font
$x+2\cdot\text{slope}$, but they do not seem to inherit further 
attributes like &lt;em&gt;italic text $\text{math}$.&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;further-resources&quot;&gt;Further Resources&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;A &lt;a href=&quot;http://www.onemathematicalcat.org/MathJaxDocumentation/TeXSyntax.htm&quot;&gt;comprehensive list&lt;/a&gt; 
of commands/macros that MathJax knows.&lt;/li&gt;
  &lt;li&gt;A few common &lt;a href=&quot;https://www.tuhh.de/MathJax/test/examples.html&quot;&gt;usage examples&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 20 May 2016 00:00:00 -0400</pubDate>
        <link>https://wild-inter.net/posts/mathjax-in-jekyll</link>
        <guid isPermaLink="true">https://wild-inter.net/posts/mathjax-in-jekyll</guid>
        
        
        <category>web</category>
        
        <category>latex</category>
        
      </item>
    
      <item>
        <title>Markdown Cheatsheet</title>
        <description>&lt;p&gt;This document demonstrates Markdown features,
and shows how they look using my Jekyll style.&lt;/p&gt;

&lt;p&gt;It is based on the official &lt;a href=&quot;https://daringfireball.net/projects/markdown/syntax&quot;&gt;syntax description&lt;/a&gt;,
but I removed or shortened many examples
and included them in the code to show how they render.&lt;/p&gt;

&lt;h1 id=&quot;markdown-syntax&quot;&gt;Markdown: Syntax&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#overview&quot;&gt;Overview&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#philosophy&quot;&gt;Philosophy&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#html&quot;&gt;Inline HTML&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#autoescape&quot;&gt;Automatic Escaping for Special Characters&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#block&quot;&gt;Block Elements&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#p&quot;&gt;Paragraphs and Line Breaks&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#header&quot;&gt;Headers&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#blockquote&quot;&gt;Blockquotes&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#list&quot;&gt;Lists&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#precode&quot;&gt;Code Blocks&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#hr&quot;&gt;Horizontal Rules&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#span&quot;&gt;Span Elements&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#link&quot;&gt;Links&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#em&quot;&gt;Emphasis&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#code&quot;&gt;Code&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#img&quot;&gt;Images&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#misc&quot;&gt;Miscellaneous&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#backslash&quot;&gt;Backslash Escapes&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#autolink&quot;&gt;Automatic Links&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;h3 id=&quot;philosophy&quot;&gt;Philosophy&lt;/h3&gt;

&lt;p&gt;Markdown is intended to be as easy-to-read and easy-to-write as is feasible.
To this end, Markdown’s syntax is comprised entirely of punctuation
characters, which punctuation characters have been carefully chosen so
as to look like what they mean. E.g., asterisks around a word actually
look like *emphasis*. Markdown lists look like, well, lists. Even
blockquotes look like quoted passages of text, assuming you’ve ever
used email.&lt;/p&gt;

&lt;h3 id=&quot;html&quot;&gt;Inline HTML&lt;/h3&gt;

&lt;p&gt;Markdown’s syntax is intended for one purpose: to be used as a
format for &lt;em&gt;writing&lt;/em&gt; for the web.
For any markup that is not covered by Markdown’s syntax, you simply
use HTML itself.&lt;/p&gt;

&lt;p&gt;Block-level HTML elements – e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt;,
&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;table&amp;gt;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;p&amp;gt;&lt;/code&gt;, etc. – must be separated from surrounding
content by &lt;em&gt;blank lines&lt;/em&gt;, and the start and end tags of the block should
not be indented with tabs or spaces. 
Markdown is smart enough not 
to add extra (unwanted) &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tags around HTML block-level tags.&lt;/p&gt;

&lt;p&gt;For example, to add an HTML table to a Markdown article:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;This is a regular paragraph.

&amp;lt;table&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Foo&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;yields:&lt;/p&gt;

&lt;p&gt;This is a regular paragraph.&lt;/p&gt;
&lt;table&gt;
    &lt;tr&gt;
        &lt;td&gt;Foo&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;This is another regular paragraph.&lt;/p&gt;

&lt;p&gt;Span-level HTML tags – e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;span&amp;gt;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;, or &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;del&amp;gt;&lt;/code&gt; – can be
used anywhere in a Markdown paragraph, list item, or header.
Unlike block-level HTML tags, Markdown syntax &lt;em&gt;is&lt;/em&gt; processed within
span-level tags.&lt;/p&gt;

&lt;h3 id=&quot;autoescape&quot;&gt;Automatic Escaping for Special Characters&lt;/h3&gt;

&lt;p&gt;In HTML, there are two characters that demand special treatment: &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&lt;/code&gt;
and &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt;. Left angle brackets are used to start tags; ampersands are
used to denote HTML entities. If you want to use them as literal
characters, you must escape them as entities, e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;lt;&lt;/code&gt;, and
&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;amp;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you use an ampersand as part of
an HTML entity, it remains unchanged; otherwise it will be translated
into &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;amp;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So, if you want to include a copyright symbol in your article, you can write
&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;copy;&lt;/code&gt; and Markdown will leave it alone: ©. 
But if you write &lt;code class=&quot;highlighter-rouge&quot;&gt;AT&amp;amp;T&lt;/code&gt; Markdown will translate it to: AT&amp;amp;T.&lt;/p&gt;

&lt;p&gt;If you write &lt;code class=&quot;highlighter-rouge&quot;&gt;4 &amp;lt; 5&lt;/code&gt; Markdown will translate it to 4 &amp;lt; 5.&lt;/p&gt;

&lt;p&gt;However, inside Markdown code spans and blocks, angle brackets and
ampersands are &lt;em&gt;always&lt;/em&gt; encoded automatically. This makes it easy to use
Markdown to write about HTML code.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;block&quot;&gt;Block Elements&lt;/h2&gt;

&lt;h3 id=&quot;p&quot;&gt;Paragraphs and Line Breaks&lt;/h3&gt;

&lt;p&gt;The implication of the “one or more consecutive lines of text” rule is
that Markdown supports “hard-wrapped” text paragraphs.
When you &lt;em&gt;do&lt;/em&gt; want to insert a &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; break tag using Markdown, you
end a line with two or more spaces, then type return:&lt;br /&gt;
Like this&lt;br /&gt;
And here the paragraph goes on.&lt;/p&gt;

&lt;h3 id=&quot;header&quot;&gt;Headers&lt;/h3&gt;

&lt;p&gt;Markdown supports two styles of headers, [Setext] [1] and [atx] [2].&lt;/p&gt;

&lt;p&gt;Setext-style headers are “underlined” using equal signs (for first-level
headers) and dashes (for second-level headers). For example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;This is an H1
=============

This is an H2
-------------
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Any number of underlining &lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt;’s or &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;’s will work.&lt;/p&gt;

&lt;p&gt;Atx-style headers use 1-6 hash characters at the start of the line,
corresponding to header levels 1-6. For example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# This is an H1

## This is an H2

###### This is an H6
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Optionally, you may “close” atx-style headers. This is purely
cosmetic – you can use this if you think it looks better.&lt;/p&gt;

&lt;h3 id=&quot;blockquote&quot;&gt;Blockquotes&lt;/h3&gt;

&lt;p&gt;Markdown uses email-style &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt; characters for blockquoting.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
&amp;gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
&amp;gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.
&amp;gt; 
&amp;gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
&amp;gt; id sem consectetuer libero luctus adipiscing.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;yields:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.&lt;/p&gt;

  &lt;p&gt;Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
id sem consectetuer libero luctus adipiscing.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Markdown allows to put the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt; only before the first
line of a hard-wrapped paragraph:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Blockquotes can be nested:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This is the first level of quoting.&lt;/p&gt;

  &lt;blockquote&gt;
    &lt;p&gt;This is nested blockquote.&lt;/p&gt;
  &lt;/blockquote&gt;

  &lt;p&gt;Back to the first level.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Blockquotes can contain other Markdown elements, including headers, lists,
and code blocks:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; ## This is a header.
&amp;gt; 
&amp;gt; 1.   This is the first list item.
&amp;gt; 2.   This is the second list item.
&amp;gt; 
&amp;gt; Here's some example code:
&amp;gt; 
&amp;gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;h2 id=&quot;this-is-a-header&quot;&gt;This is a header.&lt;/h2&gt;

  &lt;ol&gt;
    &lt;li&gt;This is the first list item.&lt;/li&gt;
    &lt;li&gt;This is the second list item.&lt;/li&gt;
  &lt;/ol&gt;

  &lt;p&gt;Here’s some example code:&lt;/p&gt;

  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;return shell_exec(&quot;echo $input | $markdown_script&quot;);
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;list&quot;&gt;Lists&lt;/h3&gt;

&lt;p&gt;Markdown supports ordered (numbered) and unordered (bulleted) lists.&lt;/p&gt;

&lt;p&gt;Unordered lists use asterisks *, pluses +, and hyphens - – interchangably
– as list markers:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*   Red
*   Green
*   Blue
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;yields&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Red&lt;/li&gt;
  &lt;li&gt;Green&lt;/li&gt;
  &lt;li&gt;Blue&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ordered lists use numbers followed by periods:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. Bird
1. McHale
1. Parish
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;yields&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Bird&lt;/li&gt;
  &lt;li&gt;McHale&lt;/li&gt;
  &lt;li&gt;Parish&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You should start the
list with the number 1; at some point in the future, Markdown may support
starting ordered lists at an arbitrary number.&lt;/p&gt;

&lt;p&gt;List markers must be followed by one or more spaces or a tab.
If you want to be lazy, you can omit hanging indents:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.
Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,
viverra nec, fringilla in, laoreet vitae, risus.
*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.
Suspendisse id sem consectetuer libero luctus adipiscing.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit.
Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,
viverra nec, fringilla in, laoreet vitae, risus.&lt;/li&gt;
  &lt;li&gt;Donec sit amet nisl. Aliquam semper ipsum sit amet velit.
Suspendisse id sem consectetuer libero luctus adipiscing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If list items are separated by blank lines, Markdown will wrap the
items in &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tags in the HTML output. For example, this input:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*   Bird

*   Magic
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;will turn into:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Bird&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Magic&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Bird&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Magic&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;List items may consist of multiple paragraphs. Each subsequent
paragraph in a list item must be indented by either 4 spaces
or one tab:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1.  This is a list item with two paragraphs. Lorem ipsum dolor
    sit amet, consectetuer adipiscing elit. Aliquam hendrerit
    mi posuere lectus.

    Vestibulum enim wisi, viverra nec, fringilla in, laoreet
    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum
    sit amet velit.

2.  Suspendisse id sem consectetuer libero luctus adipiscing.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;This is a list item with two paragraphs. Lorem ipsum dolor
sit amet, consectetuer adipiscing elit. Aliquam hendrerit
mi posuere lectus.&lt;/p&gt;

    &lt;p&gt;Vestibulum enim wisi, viverra nec, fringilla in, laoreet
vitae, risus. Donec sit amet nisl. Aliquam semper ipsum
sit amet velit.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Suspendisse id sem consectetuer libero luctus adipiscing.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To put a code block within a list item, the code block needs
to be indented &lt;em&gt;twice&lt;/em&gt; – 8 spaces or two tabs:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;A list item with a code block:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;code goes here&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It’s worth noting that it’s possible to trigger an ordered list by
accident, by writing something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1986. What a great season.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;What a great season.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In other words, a &lt;em&gt;number-period-space&lt;/em&gt; sequence at the beginning of a
line. To avoid this, you can backslash-escape the period:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1986\. What a great season.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;1986. What a great season.&lt;/p&gt;

&lt;h3 id=&quot;precode&quot;&gt;Code Blocks&lt;/h3&gt;

&lt;p&gt;To produce a code block in Markdown, simply indent every line of the
block by at least 4 spaces or 1 tab. 
Markdown wraps a code block in both &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;code&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	This is a code block indented by 2 tabs.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;while&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;This is only indented by 1 tab.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;A code block continues until it reaches a line that is not indented
(or the end of the article).&lt;/p&gt;

&lt;p&gt;Within a code block, ampersands (&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt;) and angle brackets (&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt;)
are automatically converted into HTML entities.&lt;/p&gt;

&lt;h3 id=&quot;hr&quot;&gt;Horizontal Rules&lt;/h3&gt;

&lt;p&gt;You can produce a horizontal rule tag (&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;hr /&amp;gt;&lt;/code&gt;) by placing three or
more hyphens, asterisks, or underscores on a line by themselves. If you
wish, you may use spaces between the hyphens or asterisks. Each of the
following lines will produce a horizontal rule:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* * *

***

*****

- - -

---------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;span&quot;&gt;Span Elements&lt;/h2&gt;

&lt;h3 id=&quot;link&quot;&gt;Links&lt;/h3&gt;

&lt;p&gt;To create an inline link, use a set of regular parentheses immediately
after the link text’s closing square bracket. Inside the parentheses,
put the URL where you want the link to point, along with an &lt;em&gt;optional&lt;/em&gt;
title for the link, surrounded in quotes. For example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;This is [an example](http://example.com/ &quot;Title&quot;) inline link.
[This link](http://example.net/) has no title attribute.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Title&quot;&gt;an example&lt;/a&gt; inline link.
&lt;a href=&quot;http://example.net/&quot;&gt;This link&lt;/a&gt; has no title attribute.&lt;/p&gt;

&lt;p&gt;Reference-style links use a second set of square brackets, inside
which you place a label of your choosing to identify the link.
You define your link label like this, on a line by itself:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;This is [an example][id] reference-style link.
This is [an example] [id] reference-style link.

[id]: http://example.com/  &quot;Optional Title Here&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Optional Title Here&quot;&gt;an example&lt;/a&gt; reference-style link.
This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Optional Title Here&quot;&gt;an example&lt;/a&gt; reference-style link.&lt;/p&gt;

&lt;p&gt;Empty [] copy the id from the text:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Visit [Daring Fireball][] for more information.

[Daring Fireball]: http://daringfireball.net/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Visit &lt;a href=&quot;http://daringfireball.net/&quot;&gt;Daring Fireball&lt;/a&gt; for more information.&lt;/p&gt;

&lt;p&gt;The point of reference-style links is not that they’re easier to
write. The point is that with reference-style links, your document
source is vastly more readable. Compare the above examples: using
reference-style links, the paragraph itself is only 81 characters
long; with inline-style links, it’s 176 characters; and as raw HTML,
it’s 234 characters. In the raw HTML, there’s more markup than there
is text.&lt;/p&gt;

&lt;p&gt;With Markdown’s reference-style links, a source document much more
closely resembles the final output, as rendered in a browser. By
allowing you to move the markup-related metadata out of the paragraph,
you can add links without interrupting the narrative flow of your
prose.&lt;/p&gt;

&lt;h3 id=&quot;em&quot;&gt;Emphasis&lt;/h3&gt;

&lt;p&gt;There is single and double emphasis, rendered using &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;em&amp;gt;&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*single asterisks*

_single underscores_

**double asterisks**

__double underscores__
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;yields:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;single asterisks&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;single underscores&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;double asterisks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;double underscores&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can use whichever style you prefer; the lone restriction is that
the same character must be used to open and close an emphasis span.&lt;/p&gt;

&lt;p&gt;Emphasis can be used in the mi&lt;em&gt;dd&lt;/em&gt;le of a word,
but if you surround an &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt; with spaces, it’ll be treated as a
literal asterisk or underscore: * _, anywhere else it needs to be es*caped.
&lt;code class=&quot;highlighter-rouge&quot;&gt;\*&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;p&gt;To indicate a span of &lt;code class=&quot;highlighter-rouge&quot;&gt;code&lt;/code&gt;, wrap it with backtick quotes (&lt;code class=&quot;highlighter-rouge&quot;&gt;`&lt;/code&gt;).
To include a literal backtick character within a code span, you can use
multiple backticks as the opening and closing delimiters:&lt;/p&gt;

&lt;h3 id=&quot;img&quot;&gt;Images&lt;/h3&gt;

&lt;p&gt;Inline image syntax looks like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![Alt text](/path/to/img.jpg)

![Alt text](/path/to/img.jpg &quot;Optional title&quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Reference-style image syntax looks like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![Alt text][id]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Where “id” is the name of a defined image reference. Image references
are defined using syntax identical to link references:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[id]: url/to/image  &quot;Optional title attribute&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Markdown has no syntax for specifying the dimensions of an image; 
if this is important, use regular HTML &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;misc&quot;&gt;Miscellaneous&lt;/h2&gt;

&lt;h3 id=&quot;autolink&quot;&gt;Automatic Links&lt;/h3&gt;

&lt;p&gt;For URLs, one can write &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;http://example.com/&amp;gt;&lt;/code&gt;
to get &lt;a href=&quot;http://example.com/&quot;&gt;http://example.com/&lt;/a&gt;.
Email addresses work similarly, with automatic obfuscation of the
link &lt;a href=&quot;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#116;&amp;#101;&amp;#115;&amp;#116;&amp;#064;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#046;&amp;#099;&amp;#111;&amp;#109;&quot;&gt;&amp;#116;&amp;#101;&amp;#115;&amp;#116;&amp;#064;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#046;&amp;#099;&amp;#111;&amp;#109;&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;backslash&quot;&gt;Backslash Escapes&lt;/h3&gt;

&lt;p&gt;Markdown provides backslash escapes for the following characters:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;\   backslash
`   backtick
*   asterisk
_   underscore
{}  curly braces
[]  square brackets
()  parentheses
#   hash mark
+   plus sign
-   minus sign (hyphen)
.   dot
!   exclamation mark
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Thu, 19 May 2016 00:00:00 -0400</pubDate>
        <link>https://wild-inter.net/posts/markdown-syntax</link>
        <guid isPermaLink="true">https://wild-inter.net/posts/markdown-syntax</guid>
        
        
        <category>web</category>
        
      </item>
    
  </channel>
</rss>
